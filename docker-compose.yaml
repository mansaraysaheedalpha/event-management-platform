
services:
  postgres-db:
    image: postgres:15
    container_name: event-manager_db
    restart: always
    environment: 
      POSTGRES_USER: event_management_user
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: event_manager_db
    ports: 
       - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  real-time-service: 
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3002:3002" # Expose the app port, not the DB port
    depends_on:
      real-time-db:
        condition: service_healthy # Wait for the DB to be ready
      redis:
        condition: service_started
    env_file:
      - .env # Load environment variables from a .env file
  real-time-db:
    image: postgres:15
    container_name: real-time-db
    restart: always
    environment:
      # FIX: Secrets are now loaded from environment variables
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - real-time-data:/var/lib/postgresql/data
    healthcheck: # <-- NEW: Healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # NOTE: The 'ports' section is removed for security in production.
  redis:
    image: redis:alpine
    container_name: event_manager_redis
    restart: always
    volumes:
      - redis-data:/data
    # NOTE: The 'ports' section is removed for security in production.
volumes: 
  postgres-data:
  redis-data:
  real-time-data:
  

