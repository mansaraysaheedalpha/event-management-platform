name: Event Lifecycle Service CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'event-lifecycle-service/**'
      - '.github/workflows/event-lifecycle-ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'event-lifecycle-service/**'
      - '.github/workflows/event-lifecycle-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: event_management_user
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: event_manager_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U event_management_user -d event_manager_db_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: event-lifecycle-service/requirements.txt

      - name: Install dependencies
        # This command runs from the root of the repository
        run: pip install -r event-lifecycle-service/requirements.txt

      - name: Run Pytest
        # **THE FIX**: Use the 'working-directory' key to run the command
        # in the correct folder, ensuring it finds the right environment.
        working-directory: ./event-lifecycle-service
        env:
          ENV: "local"
          DATABASE_URL_LOCAL: postgresql://event_management_user:mypassword@localhost:5432/event_manager_db_test
          REDIS_URL_LOCAL: redis://localhost:6379/0
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          INTERNAL_API_KEY: ${{ secrets.INTERNAL_API_KEY }}
          AWS_ACCESS_KEY_ID: "testing"
          AWS_SECRET_ACCESS_KEY: "testing"
          AWS_S3_REGION: "us-east-1"
          AWS_S3_BUCKET_NAME: "test-bucket"
        run: pytest